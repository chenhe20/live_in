package liv.ac.uk.live_in.dao;

import liv.ac.uk.live_in.page.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PreferenceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table preference
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table preference
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table preference
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table preference
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public PreferenceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table preference
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table preference
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeIsNull() {
            addCriterion("sleeping_time is null");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeIsNotNull() {
            addCriterion("sleeping_time is not null");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeEqualTo(Date value) {
            addCriterionForJDBCTime("sleeping_time =", value, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("sleeping_time <>", value, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("sleeping_time >", value, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("sleeping_time >=", value, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeLessThan(Date value) {
            addCriterionForJDBCTime("sleeping_time <", value, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("sleeping_time <=", value, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeIn(List<Date> values) {
            addCriterionForJDBCTime("sleeping_time in", values, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("sleeping_time not in", values, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("sleeping_time between", value1, value2, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andSleepingTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("sleeping_time not between", value1, value2, "sleepingTime");
            return (Criteria) this;
        }

        public Criteria andShareKitchenIsNull() {
            addCriterion("share_kitchen is null");
            return (Criteria) this;
        }

        public Criteria andShareKitchenIsNotNull() {
            addCriterion("share_kitchen is not null");
            return (Criteria) this;
        }

        public Criteria andShareKitchenEqualTo(Integer value) {
            addCriterion("share_kitchen =", value, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenNotEqualTo(Integer value) {
            addCriterion("share_kitchen <>", value, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenGreaterThan(Integer value) {
            addCriterion("share_kitchen >", value, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenGreaterThanOrEqualTo(Integer value) {
            addCriterion("share_kitchen >=", value, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenLessThan(Integer value) {
            addCriterion("share_kitchen <", value, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenLessThanOrEqualTo(Integer value) {
            addCriterion("share_kitchen <=", value, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenIn(List<Integer> values) {
            addCriterion("share_kitchen in", values, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenNotIn(List<Integer> values) {
            addCriterion("share_kitchen not in", values, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenBetween(Integer value1, Integer value2) {
            addCriterion("share_kitchen between", value1, value2, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andShareKitchenNotBetween(Integer value1, Integer value2) {
            addCriterion("share_kitchen not between", value1, value2, "shareKitchen");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintIsNull() {
            addCriterion("same_gender_constraint is null");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintIsNotNull() {
            addCriterion("same_gender_constraint is not null");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintEqualTo(Integer value) {
            addCriterion("same_gender_constraint =", value, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintNotEqualTo(Integer value) {
            addCriterion("same_gender_constraint <>", value, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintGreaterThan(Integer value) {
            addCriterion("same_gender_constraint >", value, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintGreaterThanOrEqualTo(Integer value) {
            addCriterion("same_gender_constraint >=", value, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintLessThan(Integer value) {
            addCriterion("same_gender_constraint <", value, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintLessThanOrEqualTo(Integer value) {
            addCriterion("same_gender_constraint <=", value, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintIn(List<Integer> values) {
            addCriterion("same_gender_constraint in", values, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintNotIn(List<Integer> values) {
            addCriterion("same_gender_constraint not in", values, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintBetween(Integer value1, Integer value2) {
            addCriterion("same_gender_constraint between", value1, value2, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andSameGenderConstraintNotBetween(Integer value1, Integer value2) {
            addCriterion("same_gender_constraint not between", value1, value2, "sameGenderConstraint");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("created_date is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("created_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(Date value) {
            addCriterion("created_date =", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(Date value) {
            addCriterion("created_date <>", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(Date value) {
            addCriterion("created_date >", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("created_date >=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(Date value) {
            addCriterion("created_date <", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
            addCriterion("created_date <=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<Date> values) {
            addCriterion("created_date in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<Date> values) {
            addCriterion("created_date not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(Date value1, Date value2) {
            addCriterion("created_date between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
            addCriterion("created_date not between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIsNull() {
            addCriterion("modified_date is null");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIsNotNull() {
            addCriterion("modified_date is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedDateEqualTo(Date value) {
            addCriterion("modified_date =", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotEqualTo(Date value) {
            addCriterion("modified_date <>", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateGreaterThan(Date value) {
            addCriterion("modified_date >", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("modified_date >=", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateLessThan(Date value) {
            addCriterion("modified_date <", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateLessThanOrEqualTo(Date value) {
            addCriterion("modified_date <=", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIn(List<Date> values) {
            addCriterion("modified_date in", values, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotIn(List<Date> values) {
            addCriterion("modified_date not in", values, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateBetween(Date value1, Date value2) {
            addCriterion("modified_date between", value1, value2, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotBetween(Date value1, Date value2) {
            addCriterion("modified_date not between", value1, value2, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusIsNull() {
            addCriterion("delete_status is null");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusIsNotNull() {
            addCriterion("delete_status is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusEqualTo(Boolean value) {
            addCriterion("delete_status =", value, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusNotEqualTo(Boolean value) {
            addCriterion("delete_status <>", value, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusGreaterThan(Boolean value) {
            addCriterion("delete_status >", value, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("delete_status >=", value, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusLessThan(Boolean value) {
            addCriterion("delete_status <", value, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusLessThanOrEqualTo(Boolean value) {
            addCriterion("delete_status <=", value, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusIn(List<Boolean> values) {
            addCriterion("delete_status in", values, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusNotIn(List<Boolean> values) {
            addCriterion("delete_status not in", values, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusBetween(Boolean value1, Boolean value2) {
            addCriterion("delete_status between", value1, value2, "deleteStatus");
            return (Criteria) this;
        }

        public Criteria andDeleteStatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("delete_status not between", value1, value2, "deleteStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table preference
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table preference
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}